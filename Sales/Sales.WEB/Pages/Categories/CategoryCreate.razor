@page "/categories/create"
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
@attribute [Authorize(Roles = "Admin")];

<h3>Crear Categoría</h3>

<CategoryForm @ref="categoryForm" Category="category" OnValidSubmit="CreateAsync" ReturnAction="Return"/>

@code {
    private Category category = new();
    private CategoryForm? categoryForm;

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;


    private async Task CreateAsync()
    {
        var responseHttp = await repository.Post("/api/categories", category);
        if (responseHttp.Error)
        {
            var messageError = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", messageError, SweetAlertIcon.Error);
            return;
        }


        await BlazoredModal.CloseAsync(ModalResult.Ok());
        Return();

    }

    private void Return()
    {
        categoryForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo($"/categories");
    }


}
